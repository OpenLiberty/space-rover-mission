apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-test.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-test.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - image: grafana/grafana:7.3.7
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          securityContext:
            runAsUser: 1000
      #     volumeMounts:
      #       - mountPath: /etc/grafana/provisioning/datasources/datasources.yml
      #         name: grafana-claim0
      #       - mountPath: /etc/grafana/provisioning/dashboards/dashboards.yml
      #         name: grafana-claim1
      #       - mountPath: /var/lib/grafana/dashboards/open-liberty_rev5.json
      #         name: grafana-claim2
      #       - mountPath: /var/lib/grafana/dashboards/space-rover-rev1.json
      #         name: grafana-claim3
      restartPolicy: Always
      # volumes:
      #   - name: grafana-claim0
      #     persistentVolumeClaim:
      #       claimName: grafana-claim0
      #   - name: grafana-claim1
      #     persistentVolumeClaim:
      #       claimName: grafana-claim1
      #   - name: grafana-claim2
      #     persistentVolumeClaim:
      #       claimName: grafana-claim2
      #   - name: grafana-claim3
      #     persistentVolumeClaim:
      #       claimName: grafana-claim3
status: {}
