---
apiVersion: apps.openliberty.io/v1
kind: OpenLibertyApplication
metadata:
  name: gameservice
  labels:
    app.service: gameservice
    app.name: space-rover
spec:
  applicationImage: space-rover/gameservice
  expose: true
  service:
    portName: "9080-tcp"
    port: 9080
  serviceability:
    size: 1Gi
    volumeClaimName: logdir-pvc-0
---
apiVersion: apps.openliberty.io/v1
kind: OpenLibertyApplication
metadata:
  name: leaderboard
  labels:
    app.service: leaderboard
    app.name: space-rover
spec:
  applicationImage: space-rover/leaderboard
  expose: true
  service:
    portName: "9070-tcp"
    port: 9070
    targetPort: 9080
---
apiVersion: apps.openliberty.io/v1
kind: OpenLibertyApplication
metadata:
  name: messenger
  labels:
    app.service: messenger
    app.name: space-rover
spec:
  applicationImage: space-rover/messenger
  expose: true
  service:
    portName: "9060-tcp"
    port: 9060
    targetPort: 9085
---
apiVersion: rc.app.stacks/v1
kind: RuntimeComponent
metadata:
  name: client
  labels:
    app.service: client
    app.name: space-rover
spec:
  applicationImage: space-rover/client
  expose: true
  service:
    portName: "3000-tcp"
    port: 3000
    targetPort: 8080
  securityContext:
    runAsUser: 1001
  route:
    annotations:
      kubernetes.io/ingress.class: "nginx"
    pathType: ImplementationSpecific
---
apiVersion: rc.app.stacks/v1
kind: RuntimeComponent
metadata:
  name: mongo
  labels:
    app.service: mongo
    app.name: space-rover
spec:
  applicationImage: space-rover/mongo
  statefulSet:
    storage:
      size: 10Gi
      mountPath: "/data/db"
  service:
    portName: "27017-tcp"
    port: 27017
  securityContext:
    runAsUser: 1001
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
stringData:
  MONGO_INITDB_ROOT_PASSWORD: {{ mongodb_password }}
  MONGO_INITDB_ROOT_USERNAME: {{ mongodb_username }}
type: Opaque
---
apiVersion: rc.app.stacks/v1
kind: RuntimeComponent
metadata:
  name: prometheus
  labels:
    app.service: prometheus
    app.name: space-rover
spec:
  applicationImage: space-rover/prometheus
  expose: true
  service:
    portName: "9090-tcp"
    port: 9090
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
  volumeMounts:
    - name: config-volume
      mountPath: /etc/prometheus/
  volumes:
  - name: config-volume
    configMap:
      name: prometheus
  route:
    annotations:
      kubernetes.io/ingress.class: "nginx"
    pathType: ImplementationSpecific
---
apiVersion: rc.app.stacks/v1
kind: RuntimeComponent
metadata:
  name: grafana
  labels:
    app.service: grafana
    app.name: space-rover
spec:
  expose: true
  applicationImage: space-rover/grafana
  service:
    portName: "3010-tcp"
    port: 3010
    targetPort: 3000
  securityContext:
    runAsUser: 1001
  route:
    annotations:
      kubernetes.io/ingress.class: "nginx"
    pathType: ImplementationSpecific